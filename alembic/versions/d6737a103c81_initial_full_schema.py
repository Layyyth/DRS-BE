"""Initial full schema

Revision ID: d6737a103c81
Revises: 
Create Date: 2025-05-25 12:17:49.690903

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd6737a103c81'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allergen_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food', sa.String(), nullable=False),
    sa.Column('allergen', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_allergen_mapping_id'), 'allergen_mapping', ['id'], unique=False)
    op.create_table('allergy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_allergy_id'), 'allergy', ['id'], unique=False)
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('blacklisted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_blacklisted_tokens_id'), 'blacklisted_tokens', ['id'], unique=False)
    op.create_table('meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('total_calories', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('instruction', sa.Text(), nullable=False),
    sa.Column('diet_type', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('meal_difficulty', sa.String(length=50), nullable=True),
    sa.Column('meal_cooking_time', sa.String(length=50), nullable=True),
    sa.Column('meal_cooking_method', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('country_origin', sa.String(length=100), nullable=True),
    sa.Column('ingredients', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('meal_type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meals_id'), 'meals', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('birthdate', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('activity_level', sa.String(length=20), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('goal', sa.String(length=50), nullable=False),
    sa.Column('preferred_diet', sa.String(length=50), nullable=True),
    sa.Column('allergies', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('reset_token', sa.String(), nullable=True),
    sa.Column('oauth_provider', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('info_gathered', sa.Boolean(), nullable=True),
    sa.Column('info_gathered_init', sa.Boolean(), nullable=True),
    sa.Column('meals_initialized', sa.Boolean(), nullable=True),
    sa.Column('reset_token_expiry', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('user_daily_consumption',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='unique_user_date')
    )
    op.create_index(op.f('ix_user_daily_consumption_id'), 'user_daily_consumption', ['id'], unique=False)
    op.create_table('user_favorite_meals',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['meals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'meal_id')
    )
    op.create_table('user_meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('meal_id', sa.Integer(), nullable=True),
    sa.Column('date_shown', sa.Date(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('total_calories', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('instruction', sa.Text(), nullable=False),
    sa.Column('diet_type', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('meal_difficulty', sa.String(length=50), nullable=True),
    sa.Column('meal_cooking_time', sa.String(length=50), nullable=True),
    sa.Column('meal_cooking_method', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('country_origin', sa.String(length=100), nullable=True),
    sa.Column('ingredients', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('meal_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['meal_id'], ['meals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_meals_id'), 'user_meals', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_meals_id'), table_name='user_meals')
    op.drop_table('user_meals')
    op.drop_table('user_favorite_meals')
    op.drop_index(op.f('ix_user_daily_consumption_id'), table_name='user_daily_consumption')
    op.drop_table('user_daily_consumption')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_meals_id'), table_name='meals')
    op.drop_table('meals')
    op.drop_index(op.f('ix_blacklisted_tokens_id'), table_name='blacklisted_tokens')
    op.drop_table('blacklisted_tokens')
    op.drop_index(op.f('ix_allergy_id'), table_name='allergy')
    op.drop_table('allergy')
    op.drop_index(op.f('ix_allergen_mapping_id'), table_name='allergen_mapping')
    op.drop_table('allergen_mapping')
    # ### end Alembic commands ###
